{"version":3,"sources":["Coin.js","App.js","reportWebVitals.js","index.js"],"names":["Coin","image","name","symbol","price","volume","priceChange","marketcap","className","src","alt","title","toLocaleString","toFixed","App","useState","coins","setCoins","search","setSearch","useEffect","axios","get","then","res","data","catch","err","console","log","filteredCoins","filter","coin","toLowerCase","includes","type","placeholder","onChange","e","target","value","map","market_cap","current_price","price_change_percentage_24h","total_volume","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAsCeA,EAnCF,SAAC,GAQP,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,KACAC,EAKI,EALJA,OACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,YACAC,EACI,EADJA,UAEA,OACE,qBAAKC,UAAU,iBAAf,SACE,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKC,IAAKR,EAAOS,IAAI,SAASC,MAAM,WACpC,6BAAKT,IACL,mBAAGM,UAAU,cAAb,SAA4BL,OAG9B,sBAAKK,UAAU,YAAf,UACE,oBAAGA,UAAU,aAAb,cAA4BJ,KAC5B,oBAAGI,UAAU,cAAb,cAA6BH,EAAOO,oBACnCN,EAAc,EACb,oBAAGE,UAAU,mBAAb,UAAiCF,EAAYO,QAAQ,GAArD,OAEA,oBAAGL,UAAU,qBAAb,UAAmCF,EAAYO,QAAQ,GAAvD,OAEF,oBAAGL,UAAU,iBAAb,uBACaD,EAAUK,6BCiClBE,MA1Df,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEEC,EAFF,KAIbC,qBAAU,WACRC,IACGC,IACC,2HAEDC,MAAK,SAACC,GACLP,EAASO,EAAIC,SAEdC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IAEH,IAIMG,EAAgBd,EAAMe,QAAO,SAACC,GAAD,OACjCA,EAAK9B,KAAK+B,cAAcC,SAAShB,EAAOe,kBAG1C,OACE,sBAAKzB,UAAU,WAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,YAAd,6BAEA,+BACE,uBACE2B,KAAK,OACL3B,UAAU,aACV4B,YAAY,SACZC,SAlBW,SAACC,GACpBnB,EAAUmB,EAAEC,OAAOC,eAsBhBV,EAAcW,KAAI,SAACT,GAClB,OACE,cAAC,EAAD,CAEE9B,KAAM8B,EAAK9B,KACXD,MAAO+B,EAAK/B,MACZE,OAAQ6B,EAAK7B,OACbI,UAAWyB,EAAKU,WAChBtC,MAAO4B,EAAKW,cACZrC,YAAa0B,EAAKY,4BAClBvC,OAAQ2B,EAAKa,cAPRb,EAAKc,WCpCPC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.81bf8258.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Coin.css\";\n\nconst Coin = ({\n  image,\n  name,\n  symbol,\n  price,\n  volume,\n  priceChange,\n  marketcap,\n}) => {\n  return (\n    <div className=\"coin-container\">\n      <div className=\"coin-row\">\n        <div className=\"coin\">\n          <img src={image} alt=\"Crypto\" title=\"Crypto\" />\n          <h3>{name}</h3>\n          <p className=\"coin-symbol\">{symbol}</p>\n        </div>\n\n        <div className=\"coin-data\">\n          <p className=\"coin-price\">${price}</p>\n          <p className=\"coin-volume\">${volume.toLocaleString()}</p>\n          {priceChange < 0 ? (\n            <p className=\"coin-percent red\">{priceChange.toFixed(2)}%</p>\n          ) : (\n            <p className=\"coin-percent green\">{priceChange.toFixed(2)}%</p>\n          )}\n          <p className=\"coin-marketcap\">\n            Mkt Cap: ${marketcap.toLocaleString()}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Coin;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Coin from \"./Coin\";\n\nfunction App() {\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=inr&order=market_cap_desc&per_page=50&page=1&sparkline=false\"\n      )\n      .then((res) => {\n        setCoins(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const filteredCoins = coins.filter((coin) =>\n    coin.name.toLowerCase().includes(search.toLowerCase())\n  );\n\n  return (\n    <div className=\"coin-app\">\n      <div className=\"coin-search\">\n        <h1 className=\"coin-text\">Search Currency</h1>\n\n        <form>\n          <input\n            type=\"text\"\n            className=\"coin-input\"\n            placeholder=\"Search\"\n            onChange={handleChange}\n          />\n        </form>\n      </div>\n\n      {filteredCoins.map((coin) => {\n        return (\n          <Coin\n            key={coin.id}\n            name={coin.name}\n            image={coin.image}\n            symbol={coin.symbol}\n            marketcap={coin.market_cap}\n            price={coin.current_price}\n            priceChange={coin.price_change_percentage_24h}\n            volume={coin.total_volume}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}